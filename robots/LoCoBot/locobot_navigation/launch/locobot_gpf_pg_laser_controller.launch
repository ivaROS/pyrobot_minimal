<launch>
  <arg name="global_planning_freq" default="$(optenv GM_PARAM_GLOBAL_PLANNING_FREQ 0)"/>
  <arg name="controller_freq" default="$(optenv GM_PARAM_CONTROLLER_FREQ 10)"/>
  <arg name="use_recovery_behaviors" default="true"/>

  <arg name="vel_topic" default="/cmd_vel"/>
  
  <arg name="fixed_frame_id" default="map"/>
  <arg name="base_frame_id" default="base_link"/>
  <arg name="sensor_frame_id" default="laser"/>

  <param name="/fixed_frame_id" value="$(arg fixed_frame_id)"/>
  <param name="/odom_frame_id" value="$(arg fixed_frame_id)"/>
  <param name="/base_frame_id" value="$(arg base_frame_id)"/>
  <param name="/sensor_frame_id" value="laser"/>

  <arg name="urdf_file2" default="$(find xacro)/xacro '$(find locobot_navigation)/urdf/box.urdf.xacro' --inorder" />
  <param name="simplified_robot_description" command="$(arg urdf_file2)" />

  <node name="egocircle_node" pkg="egocircle" type="ego_circle" required="true">
      <param name="base_frame_id" value="$(arg base_frame_id)"/>
      <param name="odom_frame_id" value="$(arg fixed_frame_id)"/>
  </node>

  <arg name="holonomic" default="$(optenv GM_PARAM_HOLONOMIC false)"/>
  <arg name="projection_operator" default="true"/>
  <arg name="planning_inflated" default="$(optenv GM_PARAM_PLANNING_INFLATED false)"/>
  <arg name="far_feasible" default="$(optenv GM_PARAM_FAR_FEASIBLE true)"/>
  <arg name="full_fov" default="$(optenv GM_PARAM_FULL_FOV true)"/>
  <arg name="inf_ratio" value="1.1" unless="$(arg planning_inflated)"/> <!--1.2-->
  <arg name="inf_ratio" value="0.0" if="$(arg planning_inflated)"/>

  <!-- <include file="$(find locobot_navigation)/launch/includes/velocity_smoother.launch.xml"/> -->

  <node pkg="egocircle_path_following" type="move_base_gpf_egocircle" respawn="false" name="move_base" output="screen" clear_params="true" required="true" >
      <rosparam file="$(find locobot_navigation)/config/common_costmap_params.yaml" command="load" ns="global_costmap"/>
      <rosparam file="$(find locobot_navigation)/config/common_costmap_params.yaml" command="load" ns="local_costmap"/>
      <rosparam file="$(find locobot_navigation)/config/local_costmap_params.yaml" command="load"/>
      <rosparam file="$(find locobot_navigation)/config/global_costmap_params.yaml" command="load"/>

      <!--<rosparam file="$(find locobot_navigation)/config/local_planner_common_params.yaml" command="load" ns="DWAPlannerROS"/>-->
      <!--<rosparam file="$(find locobot_navigation)/config/move_base_params.yaml" command="load"/>-->
      <rosparam file="$(find locobot_navigation)/config/move_base_rb_params.yaml" command="load"/>
      <rosparam file="$(find locobot_navigation)/config/global_planner_params.yaml" command="load" ns="GlobalPlanner"/>

      <param name="recovery_behavior_enabled" value="false" unless="$(arg use_recovery_behaviors)"/>

      <param name="controller_frequency" value="$(arg controller_freq)" />
      <param name="planner_frequency" value="$(arg global_planning_freq)"/>

      <param name="GenAndTest/collision_details" value="false"/>

      <param name="backward_enable" value="true"/>

      <param name="egocircle_cc_wrapper/robot_model/param_name" value="simplified_robot_description"/>
      <param name="egocircle_cc_wrapper/fixed_frame_id" value="$(arg fixed_frame_id)"/>
      <param name="egocircle_cc_wrapper/base_frame_id" value="$(arg base_frame_id)"/>
      
      <!-- Multi poses collision checking -->
      <param name="multi_poses_deviate_ang" value="3.1415926"/> <!--0.7854"-->
      <param name="multi_poses_one_side_num" value="0"/> <!--2-->

      <!-- <param name="egocylindrical_image_cc_wrapper/model_type" value="10" />
      <param name="egocylindrical_image_cc_wrapper/floor_tolerance" value=".1" />
      <param name="egocylindrical_image_cc_wrapper/robot_radius" value="0.3" />
      <param name="egocylindrical_image_cc_wrapper/robot_height" value="0.5" />
      <param name="egocylindrical_image_cc_wrapper/show_im" value="false" />
      <param name="BoxModelTVect/robot_length" value="0.7" />
      <param name="BoxModelTVect/distance_from_rear" value="0.35" /> -->

      <param name="trajectory_controller/holonomic_enable" value="false"/>
      <param name="trajectory_controller/max_ang" value="1"/>

      <!--remap from="/cmd_vel" to="/cmd_vel"/-->

      <param name="simulated_slow_global_plan_time" value="0" />

      <param name="curvature_thresh" value="10" />

      <param name="global_following_enabled" value="true" />

      <!--Smoother-->
      <param name="smooth_enabled" value="true" />
      <param name="pointsPerUnit" value="20" />
      <param name="skipPoints" value="5" />
      <param name="useEndConditions" value="false" />
      <param name="useMiddleConditions" value="false" />

      <!--Global traj and cc param-->
      <param name="max_global_poses" value="100" />
      <param name="min_ttc" value="5" /> <!--7-->
      <param name="min_tte" value="4" /> <!--5-->
      <param name="valid_min_tte" value="2" /> <!--2-->
      <param name="v_des" value="0.4" />
      <param name="NIConfig/v_max" value="0.5" /> <!--0.7 0.5-->
      <param name="NIConfig/w_max" value="1" /> <!--1 4-->
      <param name="NIConfig/a_max" value="0.55" /> <!--0.2 0.55-->
      <param name="NIConfig/w_dot_max" value="0.8" /> <!--0.8 1.78-->

      <param name="NIConfig/c_p" type="double" value="1"/>
      <param name="NIConfig/c_d" type="double" value="5"/>
      <param name="NIConfig/c_lambda" type="double" value="1"/>
      <param name="NIConfig/epsilon" type="double" value="0.2"/> <!--0.1-->

      <!--Goal reached threshold-->
      <param name="final_dist_thresh" value="0.5" />

      <!--Connection params-->
      <param name="connected_local_plan_enabled" value="true" />
      <param name="forward_pt_x" value="0.3" />
      <param name="half_ang_thresh" value="75." />

      <param name="stop_in_between" value="false"/>

      <!-- Approach-specific parameters/remappings -->
      <param name="base_local_planner" value="potential_gap_traj_planner/PotentialGapPlannerROS" />
      <rosparam file="$(find locobot_navigation)/config/potentialgap_local_planner_params.yaml" command="load"/>

      <!-- Params for the local planner-->
      <param name="PotentialGapPlannerROS/cc/cc_enable" value="false"/>
      <param name="PotentialGapPlannerROS/robot_frame_id" value="$(arg base_frame_id)"/>
      <param name="PotentialGapPlannerROS/sensor_frame_id" value="$(arg sensor_frame_id)"/> 

      <param name="PotentialGapPlannerROS/holonomic" value="$(arg holonomic)"/>
      <param name="PotentialGapPlannerROS/projection_operator" value="$(arg projection_operator)"/>

      <param name="PotentialGapPlannerROS/inf_ratio" value="$(arg inf_ratio)"/>
      <param name="PotentialGapPlannerROS/k_po" value="5"/> <!--1-->
      <param name="PotentialGapPlannerROS/planning_inflated" value="$(arg planning_inflated)"/>
      <param name="PotentialGapPlannerROS/far_feasible" value="$(arg far_feasible)"/>
      <param name="PotentialGapPlannerROS/ctrl_ahead_pose" value="3"/>
      <param name="PotentialGapPlannerROS/r_min" value="0.36"/>
      <param name="PotentialGapPlannerROS/radial_extend" value="true"/>

      <param name="PotentialGapPlannerROS/terminal_weight" value="20"/>

      <!-- Params for the local planner-->
      <param name="PotentialGapPlannerROS/v_des" value="0.2"/>
      <param name="PotentialGapPlannerROS/base_frame_id" value="$(arg base_frame_id)"/>
      <param name="PotentialGapPlannerROS/map_frame_id" value="$(arg fixed_frame_id)"/>
      <param name="PotentialGapPlannerROS/odom_frame_id" value="$(arg fixed_frame_id)"/>

  </node>

</launch>

<!-- launch-prefix="xterm -e gdb -ex run - -args" -->
